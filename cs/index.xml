<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cs on Documentation for Hugo Learn Theme</title>
    <link>/cs/</link>
    <description>Recent content in Cs on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 10 Feb 2019 00:04:53 -0500</lastBuildDate>
    
	<atom:link href="/cs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Useful Git commands</title>
      <link>/cs/git_useful/</link>
      <pubDate>Mon, 11 Feb 2019 22:00:25 -0500</pubDate>
      
      <guid>/cs/git_useful/</guid>
      <description>Overview:
There are tons of tutorial of git. For those basic concepts, I am going to link to some good tutorial. This one is focusing on some real life use case. What if you encounter these errors or what if I want to do this&amp;hellip;
Update a branch (feature) with different branch (develop) git checkout develop git pull git checkout feature git merge develop # or git rebase develop  The difference between with git rebase is that rebase keep all commits history from your branch, and that is important if your partial commits have a lot of content that can be interesting to keep.</description>
    </item>
    
    <item>
      <title>Useful commands for docker</title>
      <link>/cs/docker_useful/</link>
      <pubDate>Mon, 11 Feb 2019 22:00:25 -0500</pubDate>
      
      <guid>/cs/docker_useful/</guid>
      <description>References Top 10 Docker CLI commands you can&amp;rsquo;t live without
Lists running containers # show all containers docker ps -a # only list ids docker ps -q  Get base image from Docker Hub docker pull  Build docker images from a Dockerfile and a &amp;ldquo;context&amp;rdquo; docker build -t container_label .  Run a docker container based on an image Top 10 options for docker run
docker run my_image -it bash   --detach, -d --entrypoint --env, -e or --env-file --ip --name --publish, -p | --publish-all, -P --rm --tty, -t Command use with the option --interactive, -i --volume, -v --workdir, -w  Display the logs of a container docker logs --follow my_container  List the volumes, which are the preferred mechanism for persisting data generated by and used by Docker containers docker volume ls  Removes one or more containers docker rm my_container  Removes one or more images docker rmi my_image  Stops one or more containers docker stop my_container # docker kill my_container  Kill all running containers docker kill $(docker ps -q)  Delete all stopped containers docker rm $(docker ps -a -q)  Delete all images docker rmi $(docker images -q)  Update all images docker images |grep -v REPOSITORY|awk &#39;{print $1}&#39;|xargs -L1 docker pull  Enter a running docker container docker exec -it [container-id] bash  Copy file from docker container to host docker cp &amp;lt;containerId&amp;gt;:/file/path/within/container /host/path/target  List ports defined on a container docker port CONTAINER [Private_port[/protocol]] # Example $ docker port proxy 80/tcp -&amp;gt; 0.</description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/10_basic_commands_for_linux_performance_detection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/10_basic_commands_for_linux_performance_detection/</guid>
      <description>10 basic commands for Linux performance detection 1. uptime uptime 20:25:38 up 7 min, 3 users, load average: 0.24, 0.45, 0.27 #该命令可以大致的看出计算机的整体负载情况，load average后的数字分别表示计算机在1min、5min、15min内的平均负载。  2. dmesg | tail dmesg | tail [ 51.424401] wlp5s0: RX AssocResp from 38:4c:90:8f:8c:85 (capab=0x831 status=0 aid=3) [ 51.426461] wlp5s0: associated [ 51.429463] ath: EEPROM regdomain: 0x8348 [ 51.429463] ath: EEPROM indicates we should expect a country code [ 51.429464] ath: doing EEPROM country-&amp;gt;regdmn map search [ 51.</description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/cli_best_practice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/cli_best_practice/</guid>
      <description> CLI best practice reference
[TOC]
12 factors  Great help is essential Prefer flags to args What version am I on? Mind the streams Handle things going wrong Be fancy! Prompt if you can Use tables Be speedy Encourage contributions Be clear about subcommands Follow XDG-spec  </description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/readme/</guid>
      <description>Adenosine&amp;rsquo;s learning notes I am here -&amp;gt; semi-automation -&amp;gt; full automation -&amp;gt; Intelligence
Structure JPG (Javascript, Python, Go) developer. - Javascript : Learning how to build a website and other web knowleage. - Python : My main language. Data Science + Machine Learning - Go : For dev-ops and some tasks which require high performance.
Machine Learning practioner. - General Data Science: numpy, pandas, scipy - Machine Learning : scikit-learn - Deep Learning : Tensorflow, Pytorch - Reinforcement Learning :</description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/raspberry_pi_3_nas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/raspberry_pi_3_nas/</guid>
      <description> Raspberry Pi 3 NAS [TOC]
Mount hard driver Create NAS Enable Time machine </description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/cli_improved/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/cli_improved/</guid>
      <description>Better cli tools Ignore alias \cat # ignore aliases named &amp;quot;cat&amp;quot; - explanation: https://stackoverflow.com/a/16506263/22617 command cat # ignore functions and aliases  bat &amp;gt; cat bat
Comparing with cat, bat also offers highlighting, paging, line numbers and git integration.
Installation command:
yaourt -S bat  prettyping &amp;gt; ping fzf &amp;gt; ctrl + r In addition to searching through the history, fzf can also preview and open files, which is what I&amp;rsquo;ve done in the video below:</description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/commands_for_data_scientist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/commands_for_data_scientist/</guid>
      <description> Command line tricks for data scientist [TOC]
reference
ICONV HEAD TR WC SPLIT SORT &amp;amp; UNIQ CUT PASTE JOIN GREP  SED AWK  </description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/common_commands_useful/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/common_commands_useful/</guid>
      <description>Common Commands for linux File operations Compare two directory diff --brief -r dir1/ dir2/
If you want to see differences for files that may not exist in either directory diff --brief -Nr dir1/ dir2</description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/ssh_useful/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/ssh_useful/</guid>
      <description> SSH [TOC]
reference1
reference2
Generate a key ssh-keygen -t rsa -b 4096 -C &amp;quot;your_email@gmail.com&amp;quot;  Give a proper name for the key, or else, it would overwrite the id_rsa file
Add a key ssh-add -K ~/.ssh/id_rsa_my_key  For Mac, you need to add -k
# Use the following command to check the result ssh-add -l  Config </description>
    </item>
    
    <item>
      <title></title>
      <link>/cs/vim_useful/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/vim_useful/</guid>
      <description>Vim cheatsheet [toc]
Move Faster Move to previous word (b) Move to end of line ($) Move to end of word (e) Move to beginning of line (0) Move down one line (j) Move left one character (h) Move to last line of screen (L) Move up one line (k) Move to middle line of screen (M) Move to first line of screen (H) Move right one character (l) Move to beginning of word (b) Move to next word (w)</description>
    </item>
    
  </channel>
</rss>