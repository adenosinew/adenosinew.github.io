<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>adenosinew on Documentation for Hugo Learn Theme</title>
    <link>/</link>
    <description>Recent content in adenosinew on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 09 Feb 2019 23:53:32 -0500</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vim Cheatsheet</title>
      <link>/cs/tools/vim_useful/</link>
      <pubDate>Wed, 13 Feb 2019 12:23:19 -0500</pubDate>
      
      <guid>/cs/tools/vim_useful/</guid>
      <description>Vim cheatsheet Move Faster Move to previous word (b) Move to end of line ($) Move to end of word (e) Move to beginning of line (0) Move down one line (j) Move left one character (h) Move to last line of screen (L) Move up one line (k) Move to middle line of screen (M) Move to first line of screen (H) Move right one character (l) Move to beginning of word (b) Move to next word (w)</description>
    </item>
    
    <item>
      <title>SSH Bestpractice</title>
      <link>/cs/tools/ssh_useful/</link>
      <pubDate>Wed, 13 Feb 2019 12:23:19 -0500</pubDate>
      
      <guid>/cs/tools/ssh_useful/</guid>
      <description> SSH reference1
reference2
Generate a key ssh-keygen -t rsa -b 4096 -C &amp;quot;your_email@gmail.com&amp;quot;  Give a proper name for the key, or else, it would overwrite the id_rsa file
Add a key ssh-add -K ~/.ssh/id_rsa_my_key  For Mac, you need to add -k
# Use the following command to check the result ssh-add -l  Config </description>
    </item>
    
    <item>
      <title>Raspberry Pi 3</title>
      <link>/cs/tools/raspberry_pi_3_nas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cs/tools/raspberry_pi_3_nas/</guid>
      <description> Raspberry Pi 3 NAS [TOC]
Mount hard driver Create NAS Enable Time machine </description>
    </item>
    
    <item>
      <title>Most-used Linux CLI</title>
      <link>/cs/tools/common_commands_useful/</link>
      <pubDate>Wed, 13 Feb 2019 12:23:19 -0500</pubDate>
      
      <guid>/cs/tools/common_commands_useful/</guid>
      <description>File operations Compare two directory diff --brief -r dir1/ dir2/
If you want to see differences for files that may not exist in either directory diff --brief -Nr dir1/ dir2</description>
    </item>
    
    <item>
      <title>Better CLI tools</title>
      <link>/cs/tools/cli_improved/</link>
      <pubDate>Wed, 13 Feb 2019 12:23:19 -0500</pubDate>
      
      <guid>/cs/tools/cli_improved/</guid>
      <description>Better cli tools Ignore alias \cat # ignore aliases named &amp;quot;cat&amp;quot; - explanation: https://stackoverflow.com/a/16506263/22617 command cat # ignore functions and aliases  bat &amp;gt; cat bat
Comparing with cat, bat also offers highlighting, paging, line numbers and git integration.
Installation command:
yaourt -S bat  prettyping &amp;gt; ping fzf &amp;gt; ctrl + r In addition to searching through the history, fzf can also preview and open files, which is what I&amp;rsquo;ve done in the video below:</description>
    </item>
    
    <item>
      <title>Build CLI Best practice</title>
      <link>/cs/tools/cli_best_practice/</link>
      <pubDate>Wed, 13 Feb 2019 12:23:19 -0500</pubDate>
      
      <guid>/cs/tools/cli_best_practice/</guid>
      <description> CLI best practice reference
[TOC]
12 factors  Great help is essential Prefer flags to args What version am I on? Mind the streams Handle things going wrong Be fancy! Prompt if you can Use tables Be speedy Encourage contributions Be clear about subcommands Follow XDG-spec  </description>
    </item>
    
    <item>
      <title>Check Linux Performance CLI</title>
      <link>/cs/tools/10_basic_commands_for_linux_performance_detection/</link>
      <pubDate>Wed, 13 Feb 2019 12:23:19 -0500</pubDate>
      
      <guid>/cs/tools/10_basic_commands_for_linux_performance_detection/</guid>
      <description>1. uptime uptime 20:25:38 up 7 min, 3 users, load average: 0.24, 0.45, 0.27 #该命令可以大致的看出计算机的整体负载情况，load average后的数字分别表示计算机在1min、5min、15min内的平均负载。  2. dmesg | tail dmesg | tail [ 51.424401] wlp5s0: RX AssocResp from 38:4c:90:8f:8c:85 (capab=0x831 status=0 aid=3) [ 51.426461] wlp5s0: associated [ 51.429463] ath: EEPROM regdomain: 0x8348 [ 51.429463] ath: EEPROM indicates we should expect a country code [ 51.429464] ath: doing EEPROM country-&amp;gt;regdmn map search [ 51.429465] ath: country maps to regdmn code: 0x3a [ 51.</description>
    </item>
    
    <item>
      <title>Terraform Best Practice</title>
      <link>/cs/tools/terraform_useful/</link>
      <pubDate>Wed, 06 Mar 2019 11:35:48 -0500</pubDate>
      
      <guid>/cs/tools/terraform_useful/</guid>
      <description>What is Terraform Terraform official site
Terraform is a super useful tool developed by HashiCorp, the main idea of terraform is &amp;ldquo;INFRASTRUCTURE AS CODE&amp;rdquo;.
To me, the most attracting feature Cloud Computing is scalability. Infrastructure in Cloud is inifinite. But there are some downsides of traditional cloud library.
For AWS, I&amp;rsquo;ve tried awscli, boto3 and go sdk. For a small test, they are easy to use. But for a big test, there are too many logics and dependencies inside.</description>
    </item>
    
    <item>
      <title>Python Platform module</title>
      <link>/collections/snippets/python_platform/</link>
      <pubDate>Tue, 05 Mar 2019 10:06:08 -0500</pubDate>
      
      <guid>/collections/snippets/python_platform/</guid>
      <description>platform Access to underlying platform’s identifying data # Get Architecture, The function relies on the system’s file command to do the actual work. print(platform.architecture()) # &amp;gt;&amp;gt; (&#39;64bit&#39;, &#39;&#39;) # More reliable way to get the architecture of current interpreter is_64bits = sys.maxsize &amp;gt; 2**32 # &amp;gt;&amp;gt; True # Returns the machine type, e.g. &#39;i386&#39;. An empty string is returned if the value cannot be determined. print(platform.machine()) # &amp;gt;&amp;gt; x86_64 # Returns the computer’s network name (may not be fully qualified!</description>
    </item>
    
    <item>
      <title>Install MySQL server on CentOS</title>
      <link>/cs/tools/setup_mysql/</link>
      <pubDate>Mon, 04 Mar 2019 21:38:50 -0500</pubDate>
      
      <guid>/cs/tools/setup_mysql/</guid>
      <description>My laptop is running out of storage, since I have a VPS running as VPN server. I found it would be a good practice to setup a MySQL server in remote.
BTW, if you still have AWS free tier, AWS RDS service is super easy and stable.
Install the MySQL server I am not a big fan of ubuntu, on my local, I am using Manjaro. And for remote server, my first choice is always CentOS.</description>
    </item>
    
    <item>
      <title>Active_directory</title>
      <link>/cs/windows/active_directory/</link>
      <pubDate>Thu, 28 Feb 2019 11:11:39 -0500</pubDate>
      
      <guid>/cs/windows/active_directory/</guid>
      <description> Windows Active Directory What is Active Directory Domain Controller (DC) A server of Active Directory service
Schema (database)
 User account Computer account  Schema extentable
User Account Contains
 username password Email and etc.  Computer Account Contains
 computer name UID and etc.  Groups OU (Organization Unit) </description>
    </item>
    
    <item>
      <title>Best Practice Logs</title>
      <link>/me/track_my_work/</link>
      <pubDate>Wed, 20 Feb 2019 14:15:25 -0500</pubDate>
      
      <guid>/me/track_my_work/</guid>
      <description>Overview Hands on experience is one of the most valuable experience.
The rule is simple:
 If I didn&amp;rsquo;t go over the material for 7 days, strikethrough it. Calculate the complete rate every week Add useful snippet to gist  Best Practices March 6 2019 Ash Wesnday
SQLAlchemy — Python Tutorial [ ] Git Best Practice
 [ ] 10 Common Software Architectural Patterns in a nutshell
 [ ]</description>
    </item>
    
    <item>
      <title>My Skill Tree</title>
      <link>/me/skill_tree/</link>
      <pubDate>Wed, 20 Feb 2019 14:13:30 -0500</pubDate>
      
      <guid>/me/skill_tree/</guid>
      <description> Overview Automation Cloud Computing Terraform Packer Boto3 Go SDK Intelligence Data Science Computer Vision NLP </description>
    </item>
    
    <item>
      <title>Fancy indexing, view and copy</title>
      <link>/datascience/numpy_fancy_indexing_and_viewing/</link>
      <pubDate>Wed, 20 Feb 2019 10:14:37 -0500</pubDate>
      
      <guid>/datascience/numpy_fancy_indexing_and_viewing/</guid>
      <description>Normal Numpy Indexing Numpy arrays using:
 simple indices (e.g., arr[0]), slices (e.g., arr[:5]) Boolean masks (e.g., arr[arr &amp;gt; 0])  Numpy Fancy Indexing Fancy indexing is conceptually simple: it means passing an array of indices to access multiple array elements at once.
import numpy as np rand = np.random.RandomState(42) x = rand.randint(100, size=10) print(x) # Output # [51 92 14 71 60 20 82 86 74 74] # Normal indexing [x[3], x[7], x[2]] # [71, 86, 14] # Fancy indexing ind = [3, 7, 4] x[ind] # [71, 86, 14]  When using fancy indexing, the shape of the result reflects the shape of the index arrays rather than the shape of the array being indexed:</description>
    </item>
    
    <item>
      <title>Mount a filesystem</title>
      <link>/cs/linux/systemd_mount/</link>
      <pubDate>Thu, 14 Feb 2019 18:05:39 -0500</pubDate>
      
      <guid>/cs/linux/systemd_mount/</guid>
      <description>tldr description of mount tldr mount mount Provides access to an entire filesystem in one directory. - Show all mounted filesystems: mount - Mount a device to a directory: mount -t filesystem_type path/to/device_file path/to/target_directory - Mount a CD-ROM device (with the filetype ISO9660) to /cdrom (readonly): mount -t iso9660 -o ro /dev/cdrom /cdrom - Mount all the filesystem defined in /etc/fstab: mount -a - Mount a specific filesystem described in /etc/fstab (e.</description>
    </item>
    
    <item>
      <title>Better Develpoer</title>
      <link>/me/better_develpoer/</link>
      <pubDate>Thu, 14 Feb 2019 14:08:33 -0500</pubDate>
      
      <guid>/me/better_develpoer/</guid>
      <description>Useful suggestions  The human brain is a complex machine and it&amp;rsquo;s a result of thousands of years of human evolution. Our world has evolved very fast. For the brain, being such an old machine, working in today&amp;rsquo;s complex and distracted world is very hard. But if we use our brain as our ancestors did, we can use most of it. The following steps will help you achieve that.</description>
    </item>
    
    <item>
      <title>Useful Git commands</title>
      <link>/cs/tools/git_useful/</link>
      <pubDate>Mon, 11 Feb 2019 22:00:25 -0500</pubDate>
      
      <guid>/cs/tools/git_useful/</guid>
      <description>Overview:
There are tons of tutorial of git. For those basic concepts, I am going to link to some good tutorial. This one is focusing on some real life use cases, what if you encounter these errors or what if I want to do this&amp;hellip;
Basic Git commands git fetch The git fetch command downloads commits, files, and refs from a remote repository into your local repo. Fetching is what you do when you want to see what everybody else has been working on.</description>
    </item>
    
    <item>
      <title>Useful commands for docker</title>
      <link>/cs/tools/docker_useful/</link>
      <pubDate>Mon, 11 Feb 2019 22:00:25 -0500</pubDate>
      
      <guid>/cs/tools/docker_useful/</guid>
      <description>References Top 10 Docker CLI commands you can&amp;rsquo;t live without
Lists running containers # show all containers docker ps -a # only list ids docker ps -q  Get base image from Docker Hub docker pull  Build docker images from a Dockerfile and a &amp;ldquo;context&amp;rdquo; docker build -t container_label .  Run a docker container based on an image Top 10 options for docker run
docker run my_image -it bash   --detach, -d --entrypoint --env, -e or --env-file --ip --name --publish, -p | --publish-all, -P --rm --tty, -t Command use with the option --interactive, -i --volume, -v --workdir, -w  Display the logs of a container docker logs --follow my_container  List the volumes, which are the preferred mechanism for persisting data generated by and used by Docker containers docker volume ls  Removes one or more containers docker rm my_container  Removes one or more images docker rmi my_image  Stops one or more containers docker stop my_container # docker kill my_container  Kill all running containers docker kill $(docker ps -q)  Delete all stopped containers docker rm $(docker ps -a -q)  Delete all images docker rmi $(docker images -q)  Update all images docker images |grep -v REPOSITORY|awk &#39;{print $1}&#39;|xargs -L1 docker pull  Enter a running docker container docker exec -it [container-id] bash  Copy file from docker container to host docker cp &amp;lt;containerId&amp;gt;:/file/path/within/container /host/path/target  List ports defined on a container docker port CONTAINER [Private_port[/protocol]] # Example $ docker port proxy 80/tcp -&amp;gt; 0.</description>
    </item>
    
    <item>
      <title>Collections</title>
      <link>/me/collections/</link>
      <pubDate>Sun, 10 Feb 2019 21:52:45 -0500</pubDate>
      
      <guid>/me/collections/</guid>
      <description> Don&amp;rsquo;t do something you&amp;rsquo;ll lie to yourself later. Live in a matter you can bear to remember accurately.
It is fruitless to wish you had started years ago. In the future you will wish you had started now. Don&amp;rsquo;t wish. Act.
&amp;ldquo;Why did this happen to me?&amp;rdquo; Why not? Events will never conform perfectly to your desires. Move forward.
 </description>
    </item>
    
    <item>
      <title>Command line tricks for data scientist</title>
      <link>/datascience/commands_for_data_scientist/</link>
      <pubDate>Sun, 10 Feb 2019 21:52:45 -0500</pubDate>
      
      <guid>/datascience/commands_for_data_scientist/</guid>
      <description> reference
ICONV HEAD TR WC SPLIT SORT &amp;amp; UNIQ CUT PASTE JOIN GREP  SED AWK  </description>
    </item>
    
  </channel>
</rss>