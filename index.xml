<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aboutme on Documentation for Hugo Learn Theme</title>
    <link>/</link>
    <description>Recent content in aboutme on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 09 Feb 2019 23:53:32 -0500</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Useful Git command</title>
      <link>/cs/git_useful/</link>
      <pubDate>Mon, 11 Feb 2019 22:06:05 -0500</pubDate>
      
      <guid>/cs/git_useful/</guid>
      <description>[toc]
Update a branch (feature) with different branch (develop) git checkout develop git pull git checkout feature git merge develop # or git rebase develop  The difference between with git rebase is that rebase keep all commits history from your branch, and that is important if your partial commits have a lot of content that can be interesting to keep. This option is obligatory in some teams.
Remove grey submodule git rm --cached &amp;lt;folder_name&amp;gt; git add .</description>
    </item>
    
    <item>
      <title>Useful commands for docker</title>
      <link>/cs/docker_useful/</link>
      <pubDate>Mon, 11 Feb 2019 22:00:25 -0500</pubDate>
      
      <guid>/cs/docker_useful/</guid>
      <description>References Top 10 Docker CLI commands you can&amp;rsquo;t live without
Lists running containers # show all containers docker ps -a # only list ids docker ps -q  Get base image from Docker Hub docker pull  Build docker images from a Dockerfile and a &amp;ldquo;context&amp;rdquo; docker build -t container_label .  Run a docker container based on an image Top 10 options for docker run
docker run my_image -it bash   --detach, -d --entrypoint --env, -e or --env-file --ip --name --publish, -p | --publish-all, -P --rm --tty, -t Command use with the option --interactive, -i --volume, -v --workdir, -w  Display the logs of a container docker logs --follow my_container  List the volumes, which are the preferred mechanism for persisting data generated by and used by Docker containers docker volume ls  Removes one or more containers docker rm my_container  Removes one or more images docker rmi my_image  Stops one or more containers docker stop my_container # docker kill my_container  Kill all running containers docker kill $(docker ps -q)  Delete all stopped containers docker rm $(docker ps -a -q)  Delete all images docker rmi $(docker images -q)  Update all images docker images |grep -v REPOSITORY|awk &#39;{print $1}&#39;|xargs -L1 docker pull  Enter a running docker container docker exec -it [container-id] bash  Copy file from docker container to host docker cp &amp;lt;containerId&amp;gt;:/file/path/within/container /host/path/target  List ports defined on a container docker port CONTAINER [Private_port[/protocol]] # Example $ docker port proxy 80/tcp -&amp;gt; 0.</description>
    </item>
    
    <item>
      <title>Collections</title>
      <link>/me/collections/</link>
      <pubDate>Sun, 10 Feb 2019 21:52:45 -0500</pubDate>
      
      <guid>/me/collections/</guid>
      <description> Don&amp;rsquo;t do something you&amp;rsquo;ll lie to yourself later. Live in a matter you can bear to remember accurately.
It is fruitless to wish you had started years ago. In the future you will wish you had started now. Don&amp;rsquo;t wish. Act.
&amp;ldquo;Why did this happen to me?&amp;rdquo; Why not? Events will never conform perfectly to your desires. Move forward.
 </description>
    </item>
    
  </channel>
</rss>